services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: microservice-mysql
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${AUTH_DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
      interval: 30s

  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: microservice-auth
    env_file:
      - .env
    environment:
      - PORT=${AUTH_SERVICE_PORT}
      - GIN_MODE=${GIN_MODE}
      - DB_HOST=mysql
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${AUTH_DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRY_HOURS=${JWT_EXPIRY_HOURS}
      - USER_SERVICE_URL=http://user-service:8081
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - microservice-network
    restart: unless-stopped

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: microservice-user
    env_file:
      - .env
    environment:
      - PORT=${USER_SERVICE_PORT}
      - GIN_MODE=${GIN_MODE}
      - DB_HOST=mysql
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${USER_DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - AUTH_SERVICE_URL=http://auth-service:8080
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - microservice-network
    restart: unless-stopped

networks:
  microservice-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local 